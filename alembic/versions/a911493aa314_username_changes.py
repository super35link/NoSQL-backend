"""username_changes

Revision ID: a911493aa314
Revises: 52aaac90b211
Create Date: 2024-12-06 07:18:19.543136+00:00

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'a911493aa314'
down_revision: Union[str, None] = '52aaac90b211'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('blocked_users',
    sa.Column('blocker_id', sa.Integer(), nullable=False),
    sa.Column('blocked_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['blocked_id'], ['profiles.id'], ),
    sa.ForeignKeyConstraint(['blocker_id'], ['profiles.id'], ),
    sa.PrimaryKeyConstraint('blocker_id', 'blocked_id')
    )
    op.create_table('profile_media',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('profile_id', sa.Integer(), nullable=True),
    sa.Column('media_type', sa.String(), nullable=True),
    sa.Column('media_url', sa.String(), nullable=True),
    sa.Column('uploaded_at', sa.DateTime(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['profile_id'], ['profiles.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('profile_views',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('profile_id', sa.Integer(), nullable=True),
    sa.Column('viewer_id', sa.Integer(), nullable=True),
    sa.Column('viewed_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['profile_id'], ['profiles.id'], ),
    sa.ForeignKeyConstraint(['viewer_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.alter_column('follows', 'follower_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('follows', 'following_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('follows', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('follows', 'status',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.create_unique_constraint('unique_follow', 'follows', ['follower_id', 'following_id'])
    op.drop_constraint('follows_user_id_fkey', 'follows', type_='foreignkey')
    op.create_foreign_key(None, 'follows', 'users', ['following_id'], ['id'])
    op.create_foreign_key(None, 'follows', 'users', ['follower_id'], ['id'])
    op.drop_column('follows', 'user_id')
    op.add_column('profiles', sa.Column('banner_url', sa.String(), nullable=True))
    op.add_column('profiles', sa.Column('is_private', sa.Boolean(), nullable=True))
    op.add_column('profiles', sa.Column('show_activity_status', sa.Boolean(), nullable=True))
    op.add_column('profiles', sa.Column('profile_views', sa.Integer(), nullable=True))
    op.add_column('profiles', sa.Column('last_active', sa.DateTime(), nullable=True))
    op.add_column('profiles', sa.Column('posts_count', sa.Integer(), nullable=True))
    op.add_column('profiles', sa.Column('saved_posts_count', sa.Integer(), nullable=True))
    op.add_column('profiles', sa.Column('media_count', sa.Integer(), nullable=True))
    op.add_column('settings', sa.Column('autoplay_videos', sa.Boolean(), nullable=True))
    op.add_column('settings', sa.Column('who_can_see_posts', sa.String(), nullable=True))
    op.add_column('settings', sa.Column('who_can_reply', sa.String(), nullable=True))
    op.add_column('settings', sa.Column('allow_messages', sa.Boolean(), nullable=True))
    op.add_column('settings', sa.Column('show_read_receipts', sa.Boolean(), nullable=True))
    op.add_column('settings', sa.Column('notify_new_followers', sa.Boolean(), nullable=True))
    op.add_column('settings', sa.Column('notify_likes', sa.Boolean(), nullable=True))
    op.add_column('settings', sa.Column('notify_reposts', sa.Boolean(), nullable=True))
    op.add_column('settings', sa.Column('notify_mentions', sa.Boolean(), nullable=True))
    op.add_column('settings', sa.Column('notify_replies', sa.Boolean(), nullable=True))
    op.add_column('settings', sa.Column('push_enabled', sa.Boolean(), nullable=True))
    op.add_column('settings', sa.Column('email_enabled', sa.Boolean(), nullable=True))
    op.add_column('settings', sa.Column('sensitive_content', sa.Boolean(), nullable=True))
    op.add_column('settings', sa.Column('quality_filter', sa.Boolean(), nullable=True))
    op.add_column('settings', sa.Column('muted_words', sa.JSON(), nullable=True))
    op.drop_column('settings', 'notification_preferences')
    op.drop_column('settings', 'privacy_settings')
    op.alter_column('users', 'username',
               existing_type=sa.VARCHAR(),
               nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('users', 'username',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.add_column('settings', sa.Column('privacy_settings', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column('settings', sa.Column('notification_preferences', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.drop_column('settings', 'muted_words')
    op.drop_column('settings', 'quality_filter')
    op.drop_column('settings', 'sensitive_content')
    op.drop_column('settings', 'email_enabled')
    op.drop_column('settings', 'push_enabled')
    op.drop_column('settings', 'notify_replies')
    op.drop_column('settings', 'notify_mentions')
    op.drop_column('settings', 'notify_reposts')
    op.drop_column('settings', 'notify_likes')
    op.drop_column('settings', 'notify_new_followers')
    op.drop_column('settings', 'show_read_receipts')
    op.drop_column('settings', 'allow_messages')
    op.drop_column('settings', 'who_can_reply')
    op.drop_column('settings', 'who_can_see_posts')
    op.drop_column('settings', 'autoplay_videos')
    op.drop_column('profiles', 'media_count')
    op.drop_column('profiles', 'saved_posts_count')
    op.drop_column('profiles', 'posts_count')
    op.drop_column('profiles', 'last_active')
    op.drop_column('profiles', 'profile_views')
    op.drop_column('profiles', 'show_activity_status')
    op.drop_column('profiles', 'is_private')
    op.drop_column('profiles', 'banner_url')
    op.add_column('follows', sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'follows', type_='foreignkey')
    op.drop_constraint(None, 'follows', type_='foreignkey')
    op.create_foreign_key('follows_user_id_fkey', 'follows', 'users', ['user_id'], ['id'])
    op.drop_constraint('unique_follow', 'follows', type_='unique')
    op.alter_column('follows', 'status',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('follows', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('follows', 'following_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('follows', 'follower_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.drop_table('profile_views')
    op.drop_table('profile_media')
    op.drop_table('blocked_users')
    # ### end Alembic commands ###
